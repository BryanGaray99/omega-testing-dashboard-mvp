# ===================================
# Omega Testing - Docker Compose
# ===================================

version: "3.8"

services:
  # Main application service
  Omega Testing:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: Omega Testing-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      # Mount data directory for persistence
      - ./data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
    networks:
      - Omega Testing-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: Omega Testing-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - Omega Testing
    networks:
      - Omega Testing-network
    profiles:
      - with-nginx

  # Redis for caching (future implementation)
  redis:
    image: redis:7-alpine
    container_name: Omega Testing-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - Omega Testing-network
    profiles:
      - with-redis

  # PostgreSQL database (future implementation)
  postgres:
    image: postgres:15-alpine
    container_name: Omega Testing-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: Omega Testing
      POSTGRES_USER: Omega Testing
      POSTGRES_PASSWORD: Omega Testing_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - Omega Testing-network
    profiles:
      - with-database

networks:
  Omega Testing-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
# ===================================
# Usage Examples:
#
# Basic deployment:
# docker-compose up -d
#
# With Nginx proxy:
# docker-compose --profile with-nginx up -d
#
# Full stack with database:
# docker-compose --profile with-nginx --profile with-redis --profile with-database up -d
#
# Development with logs:
# docker-compose up
#
# Rebuild and start:
# docker-compose up --build
#
# Stop all services:
# docker-compose down
#
# Remove volumes (careful!):
# docker-compose down -v
# ===================================
